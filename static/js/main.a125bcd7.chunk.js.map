{"version":3,"sources":["components/AppBar.js","components/Layout.js","pages/Welcome.js","routeDistributor.js","App.js","components/Theme.js","serviceWorker.js","index.js"],"names":["compose","withWidth","initialWidth","withStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","toolbar","width","maxWidth","layout","contentMaxWidth","margin","_ref","classes","children","history","_React$useState","React","useState","_React$useState2","Object","slicedToArray","anchorEl","setAnchorEl","handleClose","react_default","a","createElement","className","AppBar_AppBar","appBar","position","Toolbar","Hidden","only","IconButton","edge","color","aria-label","Menu_default","Typography","variant","Button","onClick","event","currentTarget","Menu_Menu","id","keepMounted","open","Boolean","onClose","MenuItem","wrapper","aside","asider","main","overflow","components_AppBar","useStyles","makeStyles","icon","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","footer","PageHome","components_Layout","Container","component","align","gutterBottom","paragraph","Grid","container","justify","item","ROUTES","path","PageWelcome","exact","isPrivate","routes","NotFound","Link","to","RouteWithSubRoutes","Component","redirect","params","objectWithoutProperties","Redirect","from","Route","render","props","pathname","assign","RouteConfig","HashRouter","Switch","map","route","i","routeDistributor_RouteWithSubRoutes","key","App","routeDistributor_RouteConfig","createMuiTheme","type","primary","contrast","grey","typography","useNextVariants","MuiButtonBase","disableRipple","shadows","ThemeProvider","ThemeProvider_ThemeProvider","window","location","hostname","match","ReactDOM","BrowserRouter","Theme","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a125bcd7.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport AppBarBase from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport withWidth from \"@material-ui/core/withWidth\";\nimport Hidden from '@material-ui/core/Hidden';\nimport {IntlProvider, injectIntl} from \"react-intl\";\nimport {compose} from 'redux';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  toolbar: {\n    width: \"100%\",\n    maxWidth: theme.layout.contentMaxWidth,\n    margin: \"0 auto\"\n  }\n});\n\nconst AppBar = ({classes, children, history, width}) => {\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (<div className={classes.root}>\n    <AppBarBase className={classes.appBar} position=\"static\">\n      <Toolbar className={classes.toolbar}>\n        <Hidden only=\"xs\">\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon/>\n          </IconButton>\n        </Hidden>\n        <Typography variant=\"h6\" className={classes.title}>\n          {width}\n          EDUAGG\n        </Typography>\n        <Button color=\"inherit\">поиск</Button>\n        <Button color=\"inherit\" onClick={handleClick}>\n          Аккаунт\n        </Button>\n        <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted=\"keepMounted\" open={Boolean(anchorEl)} onClose={handleClose}>\n          <MenuItem onClick={handleClose}>Вход</MenuItem>\n          <MenuItem onClick={handleClose}>Регистрация</MenuItem>\n        </Menu>\n      </Toolbar>\n    </AppBarBase>\n  </div>);\n};\n\nAppBar.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string),\n  children: PropTypes.node,\n  history: PropTypes.object,\n  width: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs']).isRequired\n};\n\nexport default compose(withWidth({initialWidth: 'lg'}), withStyles(styles))(AppBar);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\n\nimport AppBar from \"../components/AppBar\";\n\nconst styles = theme => ({\n  root: {\n    // minWidth: 1112\n  },\n  wrapper: {\n    // width: \"100%\",\n    // maxWidth: theme.layout.contentMaxWidth,\n    // margin: \"0 auto\",\n    // padding: theme.spacing.unit * 3,\n    // display: \"flex\",\n    // justifyContent: \"flex-start\"\n  },\n  aside: {\n    width: 400,\n\n  },\n  asider: {\n    width: 0\n  },\n  main: {\n    // maxWidth: 700,\n    // marginLeft: theme.spacing.unit * 3,\n    // marginRight: theme.spacing.unit * 3,\n    overflow: \"hidden\",\n    // flex: none\n  }\n});\n\nconst Layout = ({classes, children, aside, asider, history}) => (<div className={classes.root}>\n\n  <AppBar history={history}/>\n  <main className={classes.wrapper}>\n    <div className={classes.main}>{children}</div>\n  </main>\n</div>);\n\nLayout.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string),\n  children: PropTypes.node,\n  aside: PropTypes.node,\n  asider: PropTypes.node,\n  history: PropTypes.object\n};\n\nexport default withStyles(styles)(Layout);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Layout from \"../components/Layout\";\n\nimport Button from '@material-ui/core/Button';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6)\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4)\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6)\n  }\n}));\n// const classes = useStyles();\nconst PageHome = ({history}) => {\n  const classes = useStyles();\n  return (<Layout history={history}>\n    <div className={classes.heroContent}>\n      <Container maxWidth=\"sm\">\n        <Typography component=\"h3\" variant=\"h3\" align=\"center\" color=\"textPrimary\" gutterBottom=\"gutterBottom\">\n          Блок “Начать учиться”\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph=\"paragraph\">\n          содержит краткую информацию об обучении в сервисе, также содержит кнопку “Я - представитель онлайн-школы”, которая переключает пользователя на другой вид страницы (см. Главная страница (директор));\n        </Typography>\n        <div className={classes.heroButtons}>\n          <Grid container=\"container\" spacing={2} justify=\"center\">\n            <Grid item=\"item\">\n              <Button variant=\"contained\" color=\"primary\">\n                Я представитель Онлайн-школы\n              </Button>\n            </Grid>\n            <Grid item=\"item\"></Grid>\n          </Grid>\n        </div>\n      </Container>\n    </div>\n    <div className={classes.heroContent}>\n      <Container maxWidth=\"sm\">\n        <Typography component=\"h3\" variant=\"h3\" align=\"center\" color=\"textPrimary\" gutterBottom=\"gutterBottom\">\n          Блок “О сервисе”\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph=\"paragraph\">\n          содержит информацию о том, как устроен сервис (агрегатор, в рамках которого происходит всё общение с онлайн-школами);\n        </Typography>\n      </Container>\n    </div>\n    <div className={classes.heroContent}>\n      <Container maxWidth=\"sm\">\n        <Typography component=\"h3\" variant=\"h3\" align=\"center\" color=\"textPrimary\" gutterBottom=\"gutterBottom\">\n          Блок “Наши преимущества”\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph=\"paragraph\">\n          содержит информацию о наших преимуществах для обучения (широкий выбор школ, не нужно иметь множества подписок в социальных сетях и прочее);\n        </Typography>\n      </Container>\n    </div>\n\n    <div className={classes.heroContent}>\n      <Container maxWidth=\"sm\">\n        <Typography component=\"h3\" variant=\"h3\" align=\"center\" color=\"textPrimary\" gutterBottom=\"gutterBottom\">\n          Блок “Онлайн-школы”\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph=\"paragraph\">\n          содержит информацию об онлайн-школах, которые присоединились к сервису.\n        </Typography>\n      </Container>\n    </div>\n  </Layout>)\n};\n\nPageHome.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string),\n  history: PropTypes.object\n};\n\nexport default PageHome;\n","import React from 'react'\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom'\nimport { Link } from 'react-router-dom';\n\nimport PageWelcome from \"./pages/Welcome\";\n\nconst ROUTES = [\n  {\n    path: '/main',\n    component: PageWelcome,\n    exact:true\n  },\n  {\n  path: '/s',\n  isPrivate: true,\n  routes: [\n    {\n      path: '/search',\n      component: PageWelcome\n    },\n  ]\n }\n]\n\nconst NotFound = () => (\n  <div>\n    <h1>404 - Not Found!</h1>\n    <Link to=\"/\">\n      Go Home\n    </Link>\n  </div>\n);\n\nconst RouteWithSubRoutes = ({ component: Component, redirect, path, exact, isPrivate, routes, ...params }) => {\n  if (redirect) return (<Redirect from={path} to={redirect} />)\n\n  if (isPrivate) {\n    return (\n      <Route\n        path={path}\n        exact={exact}\n        render={props => {\n          // if (AuthService.isAuthenticated) {\n          //   return (\n          //     <Component\n          //       routes={routes}\n          //       {...params}\n          //       {...props}\n          //     />\n          //   )\n          // }\n\n          return (\n            <Redirect to={{\n              pathname: '/authorization',\n            }}/>\n          )\n        }}\n      />\n    )\n  }\n\n  return (\n    <Route\n      path={path}\n      exact={exact}\n      render={props => (\n        <Component\n          routes={routes}\n          {...params}\n          {...props}\n        />\n      )}\n    />\n  )\n}\n\nclass RouteConfig extends React.Component {\n  render () {\n    return (\n      <Router>\n        <Switch>\n          {\n            ROUTES.map((route, i) => (\n              <RouteWithSubRoutes\n                key={i}\n                {...route}\n              />\n            ))\n          }\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport { RouteConfig, RouteWithSubRoutes }\n","import React, { Component } from \"react\";\nimport withWidth from '@material-ui/core/withWidth';\nimport { RouteConfig } from './routeDistributor'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='route-config-wrapper'>\n      <RouteConfig />\n    </div>\n    );\n  }\n}\n\nexport default App\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MuiThemeProvider } from '@material-ui/core';\nimport withWidth from \"@material-ui/core/withWidth\";\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: \"#2C4FFE\"\n    },\n    background: {\n      contrast: grey[100],\n    }\n  },\n  typography: {\n    useNextVariants: true,\n  },\n  props: {\n    MuiButtonBase: {\n      disableRipple: false, // No more ripple\n    },\n  },\n  layout: {\n    contentMaxWidth: 1112,\n  }\n});\n\ntheme.shadows[1] = '0 3px 3px rgba(0,0,0,.08)';\ntheme.shadows[2] = '0 10px 10px rgba(0,0,0,.08)';\ntheme.shadows[4] = '0px 2px 40px 0px rgba(0,0,0,0.08)';\n\nconst ThemeProvider = ({ children }) => (\n  <MuiThemeProvider theme={theme}>\n\n    {children}\n  </MuiThemeProvider>\n);\n\nThemeProvider.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default ThemeProvider;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport ThemeProvider from './components/Theme';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}